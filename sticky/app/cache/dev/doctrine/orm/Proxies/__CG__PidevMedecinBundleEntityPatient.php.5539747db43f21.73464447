<?php

namespace Proxies\__CG__\Pidev\MedecinBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Patient extends \Pidev\MedecinBundle\Entity\Patient implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdPatient()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idPatient"];
        }
        $this->__load();
        return parent::getIdPatient();
    }

    public function setNomPatient($nomPatient)
    {
        $this->__load();
        return parent::setNomPatient($nomPatient);
    }

    public function getNomPatient()
    {
        $this->__load();
        return parent::getNomPatient();
    }

    public function setPrenomPatient($prenomPatient)
    {
        $this->__load();
        return parent::setPrenomPatient($prenomPatient);
    }

    public function getPrenomPatient()
    {
        $this->__load();
        return parent::getPrenomPatient();
    }

    public function setCinPatient($cinPatient)
    {
        $this->__load();
        return parent::setCinPatient($cinPatient);
    }

    public function getCinPatient()
    {
        $this->__load();
        return parent::getCinPatient();
    }

    public function setAdresse($adresse)
    {
        $this->__load();
        return parent::setAdresse($adresse);
    }

    public function getAdresse()
    {
        $this->__load();
        return parent::getAdresse();
    }

    public function setTelPatient($telPatient)
    {
        $this->__load();
        return parent::setTelPatient($telPatient);
    }

    public function getTelPatient()
    {
        $this->__load();
        return parent::getTelPatient();
    }

    public function setMailPatient($mailPatient)
    {
        $this->__load();
        return parent::setMailPatient($mailPatient);
    }

    public function getMailPatient()
    {
        $this->__load();
        return parent::getMailPatient();
    }

    public function setUrlPhotoPatient($urlPhotoPatient)
    {
        $this->__load();
        return parent::setUrlPhotoPatient($urlPhotoPatient);
    }

    public function getUrlPhotoPatient()
    {
        $this->__load();
        return parent::getUrlPhotoPatient();
    }

    public function setSexPatient($sexPatient)
    {
        $this->__load();
        return parent::setSexPatient($sexPatient);
    }

    public function getSexPatient()
    {
        $this->__load();
        return parent::getSexPatient();
    }

    public function setDateNPatient($dateNPatient)
    {
        $this->__load();
        return parent::setDateNPatient($dateNPatient);
    }

    public function getDateNPatient()
    {
        $this->__load();
        return parent::getDateNPatient();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idPatient', 'nomPatient', 'prenomPatient', 'cinPatient', 'adresse', 'telPatient', 'mailPatient', 'urlPhotoPatient', 'sexPatient', 'dateNPatient');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}